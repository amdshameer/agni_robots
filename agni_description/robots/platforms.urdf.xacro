<?xml version="1.0"?>
<robot name="platform" xmlns:xacro="http://www.ros.org/wiki/xacro">
     
  <xacro:arg name="ARM" default="kuka"/>
  <xacro:arg name="R" default="1"/>
  <xacro:arg name="L" default="0"/>
  <xacro:arg name="R_EE_TYPE" default="-"/>
  <xacro:arg name="R_EE_MODEL" default="-"/>
  <xacro:arg name="R_EE_SIDE" default="right"/>
  <xacro:arg name="R_EE_TACTILE" default="-"/>
  <xacro:arg name="L_EE_TYPE" default="-"/>
  <xacro:arg name="L_EE_MODEL" default=""/>
  <xacro:arg name="L_EE_SIDE" default="left"/>
  <xacro:arg name="L_EE_TACTILE" default="-"/>
  <xacro:arg name="FLOBI" default="0"/>
  <xacro:arg name="SIM" default="1"/>
  
  <!-- ARM to select the arm type. 
       files called <ARM>.urdf.xacro and <ARM>_cal.xml should exist and provide
       - offset of the base relatively to the <ARM>_frame
       - arm_ee macro with the params
         * parent : where it is attached
         * arm : arm type
         * is_right : 1 if arm is the right one
         * ee_macro : name of the end-effector macro
         * ee_base_link : name of the base_link of the end-effector to link to
         * use_prefix : should we use prefix for the end-effector
         * prefix : the prefix (for instance "r")
         * controller : should the controllers be loaded or not
         * *origin : first block for the base offset
         * *ee_offset : second block for the end-effector offset -->
  <!-- FLOBI to select if flobi should be added to the setup -->
  <!-- R and L to select left or right or both arm and hand -->
  <!-- R_EE_TYPE and L_EE_TYPE are the names of the end-effectors
       mounted on right and left arms respectively -->
  <!-- R_EE_MODEL and L_EE_MODEL are the model of the end-effectors
       mounted on right and left arms respectively -->
  <!-- R_EE_SIDE and L_EE_SIDE are the variants of the end-effectors 
       for right and left arms respectively
       Note a left hand can be mounted on the right arm 
       with R_EE_SIDE:=left --> 
  <!-- R_EE_TACTILE and L_EE_TACTILE define the type of tactile system of the end-effectors
       mounted on right and left arms respectively -->
  <!-- file called right_<R_EE_TYPE>.urdf.xacro should exist and provide 
        - a macro called <R_EE_TYPE> taking parameters model, tactile, side and prefix
        - a property as a dictionary ee_mount['<R_EE_TYPE>'] with the name of the attachement link 
          for this end-effector type 
        - offset properties as a dictionary cal_ee_x|y|z|yaw|pitch|roll['<R_EE_TYPE>']['left|right'] 
          of the mounting part of this effector when attached on the arm
          -->
  
  <!-- speeding up -->
  <xacro:property name="agni_description_path" value="$(find agni_description)"/>
  
  <xacro:include filename="$(find sr_description)/materials.urdf.xacro" />
  
  <!-- arm -->
  <xacro:include filename="${agni_description_path}/robots/$(arg ARM)_arm.urdf.xacro" /> 
  <!-- frame -->
  <xacro:include filename="${agni_description_path}/urdf/$(arg ARM)_frame.urdf.xacro"/>
  <!-- arm calibration -->
  <xacro:include filename="${agni_description_path}/calibration/$(arg ARM)_cal.xml"/>
  <!-- frame generation -->
  <xacro:call macro="$(arg ARM)_frame" prefix="$(arg ARM)" />
 
  <xacro:property name="r" value="$(arg R)"/> 
  <xacro:property name="r_ee_type" value="$(arg R_EE_TYPE)"/> 
  <xacro:property name="l_ee_type" value="$(arg L_EE_TYPE)"/> 

  <xacro:if value="$(arg R)">
    <!-- Arm -->
    <xacro:property name="arm"  value="$(arg ARM)" />
    <xacro:call macro="${arm}_arm" parent="world" side="right" controller="$(arg SIM)">
    <origin xyz="${cal_arm_x.get('right',0.0)} ${cal_arm_y.get('right',0.0)} ${cal_arm_z.get('right',0.0)}"
      rpy="${cal_arm_roll.get('right',0.0)} ${cal_arm_pitch.get('right',0.0)} ${cal_arm_yaw.get('right',0.0)}"/>
    </xacro:call>
    
    
    <xacro:property name="r_ee_side" value="$(arg R_EE_SIDE)"/>
    <xacro:property name="r_ee_model" value="$(arg R_EE_MODEL)"/>  
    <xacro:property name="r_ee_prefix" value="${'rh' if r_ee_side=='right' else 'lh'}"/>
    <xacro:property name="r_ee_tactile" value="$(arg R_EE_TACTILE)"/>
    
    <xacro:if value="${1 if r_ee_type!='-' else 0}">
     <!-- right end-effector -->
      <xacro:include filename="${agni_description_path}/robots/${r_ee_type}_ee.urdf.xacro" /> 
      <xacro:include filename="${agni_description_path}/calibration/${r_ee_type}_${r_ee_model}_cal.xml"/>  
      <xacro:call macro="${r_ee_type}" model="$(arg R_EE_MODEL)" tactile="${r_ee_tactile if r_ee_tactile!='-' else ''}" side="${r_ee_side}" prefix="${r_ee_prefix}"/>         

     <!-- Link arm and effector -->
      <joint name="ra_arm_hand_mount" type="fixed">
        <parent link="ra_${arm_mount[arm]}"/> 
        <child link="${r_ee_prefix}_${ee_mount[r_ee_type]}"/>
          <origin xyz="${cal_ee_x[r_ee_type].get(r_ee_side,0.0)} ${cal_ee_y[r_ee_type].get(r_ee_side,0.0)} ${cal_ee_z[r_ee_type].get(r_ee_side,0.0)}"
        rpy="${cal_ee_roll[r_ee_type].get(r_ee_side,0.0)} ${cal_ee_pitch[r_ee_type].get(r_ee_side,0.0)} ${cal_ee_yaw[r_ee_type].get(r_ee_side,0.0)}"/>
      </joint>

    </xacro:if>
  </xacro:if>
  
  <xacro:if value="$(arg L)">
    <!-- Arm  -->
    <xacro:property name="arm"  value="$(arg ARM)" />
    <xacro:call macro="${arm}_arm" parent="world" side="left" controller="$(arg SIM)">
      <origin xyz="${cal_arm_x.get('left',0.0)} ${cal_arm_y.get('left',0.0)} ${cal_arm_z.get('left',0.0)}"
      rpy="${cal_arm_roll.get('left',0.0)} ${cal_arm_pitch.get('left',0.0)} ${cal_arm_yaw.get('left',0.0)}"/>
    </xacro:call>

    <xacro:property name="l_ee_side" value="$(arg L_EE_SIDE)"/>
    <xacro:property name="l_ee_model" value="$(arg L_EE_MODEL)"/>  
    <xacro:property name="l_ee_prefix" value="${'rh' if l_ee_side=='right' else 'lh'}"/>
    <xacro:property name="l_ee_tactile" value="$(arg L_EE_TACTILE)"/>
  
    <xacro:if value="${1 if l_ee_type!='-' else 0}">
      <!-- left end-effector -->
      <xacro:if value="${1 if (r_ee_type!=l_ee_type or r==0) else 0}">
        <xacro:include filename="${agni_description_path}/robots/${l_ee_type}_ee.urdf.xacro" /> 
        <xacro:include filename="${agni_description_path}/calibration/${l_ee_type}_${l_ee_model}_cal.xml"/>  
      </xacro:if>

    
      <xacro:call macro="${l_ee_type}" model="$(arg L_EE_MODEL)" tactile="${l_ee_tactile if l_ee_tactile!='-' else ''}" side="${l_ee_side}" prefix="${l_ee_prefix}"/>         
      <!-- Link arm and effector -->
      <joint name="la_arm_hand_mount" type="fixed">
        <parent link="la_${arm_mount[arm]}"/> 
        <child link="${l_ee_prefix}_${ee_mount[l_ee_type]}"/>
          <origin xyz="${cal_ee_x[l_ee_type].get(l_ee_side,0.0)} ${cal_ee_y[l_ee_type].get(l_ee_side,0.0)} ${cal_ee_z[l_ee_type].get(l_ee_side,0.0)}"
      rpy="${cal_ee_roll[l_ee_type].get(l_ee_side,0.0)} ${cal_ee_pitch[l_ee_type].get(l_ee_side,0.0)} ${cal_ee_yaw[l_ee_type].get(l_ee_side,0.0)}"/>
      </joint> 
    </xacro:if>
  </xacro:if>
  
  <xacro:if value="$(arg FLOBI)">
    <!-- flobi -->
    <xacro:include filename="$(find flobi_sim)/defs/xacro/flobiv3.urdf.xacro" />
    <xacro:flobi prefix="" neutral="1" gender="0" parent="$(arg ARM)_frame" >
      <origin xyz="0 ${cal_arm_y['right']} ${cal_arm_z['right']+mount_triangle_length/2*sin(60/180.0*pi)+0.01}" rpy="0 0 ${-pi/2.0}"/>
    </xacro:flobi>
 </xacro:if>

</robot>
