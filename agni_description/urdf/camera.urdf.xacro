<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- The reference frame is depth optical frame if has_depth, otherwise camera_rgb_optical, all other frames are built around it -->

  <xacro:include filename="../urdf/gazebo_camera.urdf.xacro"/>
  <!-- do not name the macro 'camera', it conflicts with gazebo camera tag -->
  <xacro:macro name="camera_body" params="parent name fps hfov width height hfov2:=- width2:=- height2:=- has_depth *origin has_second_origin:=0 *second_origin">
    <xacro:if value="${1 if 'world' in parent else 0}">
      <link name="${parent}" />
    </xacro:if>
    <xacro:if value="${has_depth}">
      <!-- attach depth to parent -->
      <joint name="${name}_camera_depth_optical_joint" type="fixed">
        <xacro:insert_block name="origin"/>
        <parent link="${parent}"/>
        <child link="${name}_camera_depth_optical_frame" />
      </joint>

      <link name="${name}_camera_depth_optical_frame">
        <inertial>
          <mass value="0.001" />
          <origin xyz="0 0 0" />
          <inertia ixx="0.000002" ixy="0.0" ixz="0.0"
             iyy="0.00001" iyz="0.0"
             izz="0.000002" />
        </inertial>
      </link>

      <joint name="${name}_camera_depth_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${pi/2} ${-pi/2} 0 " />
        <parent link="${name}_camera_depth_optical_frame" />
        <child link="${name}_camera_depth_frame" />
      </joint>

      <link name="${name}_camera_depth_frame">
        <inertial>
          <mass value="0.01" />
          <origin xyz="0 0 0" />
          <inertia ixx="0.00001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0"
          izz="0.00001" />
        </inertial>
      </link> 

      <joint name="base_${name}_camera_depth_joint" type="fixed">
        <origin xyz="0 -0.018 0" rpy="0 0 0" />
        <parent link="${name}_camera_depth_frame" />
        <child link="${name}_camera_link" />
      </joint>
    </xacro:if>
    
    <link name="${name}_camera_link">
      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.00001" ixy="0.0" ixz="0.0"
           iyy="0.00001" iyz="0.0"
           izz="0.00001" />
      </inertial>
      <visual>
        <origin xyz=" 0 0 0 " rpy="0 0 0" />
        <geometry>
          <mesh filename="package://sr_description/other/model/kinect.dae"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
        <geometry>
          <box size="0.0730 .2760 0.0720"/>
        </geometry>
      </collision>
    </link>
    
    <xacro:if value="${has_depth}">
      <xacro:unless value="${has_second_origin}">
        <!-- attach rgb to camera_link if has depth but not attached to parent -->
        <joint name="base_${name}_camera_rgb_joint" type="fixed">
          <origin xyz="0 -0.005 0" rpy="0 0 0" /> <!-- CHECK THIS OFFSET -->
          <parent link="${name}_camera_link" />
          <child link="${name}_camera_rgb_frame" />
        </joint>
      </xacro:unless>
    </xacro:if>
    <xacro:unless value="${has_depth}">
      <joint name="base_${name}_camera_rgb_joint" type="fixed">
        <origin xyz="0 0.005 0" rpy="0 0 0" /> <!-- CHECK THIS OFFSET -->
        <parent link="${name}_camera_rgb_frame" />
        <child link="${name}_camera_link" />
      </joint>
    </xacro:unless>
    <link name="${name}_camera_rgb_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.000001" ixy="0.0" ixz="0.0"
           iyy="0.000001" iyz="0.0"
           izz="0.000001" />
      </inertial>
    </link>
    <link name="${name}_camera_rgb_optical_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
           iyy="0.000001" iyz="0.0"
           izz="0.000001" />
      </inertial>
    </link>
    <xacro:if value="${has_depth}">
      <xacro:if value="${has_second_origin}">
        <!-- attach in this order if rgb attached to parent -->
        <joint name="${name}_camera_rgb_joint" type="fixed">
          <origin xyz="0 0 0" rpy="${pi/2} ${-pi/2} 0 " />
          <parent link="${name}_camera_rgb_optical_frame" />
          <child link="${name}_camera_rgb_frame" />
        </joint>      
      </xacro:if>
      <xacro:unless value="${has_second_origin}">
        <!-- attach in this order if rgb not attached to parent -->
        <joint name="${name}_camera_rgb__joint" type="fixed">
          <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
          <parent link="${name}_camera_rgb_frame" />
          <child link="${name}_camera_rgb_optical_frame" />
        </joint>
      </xacro:unless>
    </xacro:if>
    <xacro:unless value="${has_depth}">
      <!-- attach in this order if rgb attached to parent -->
      <joint name="${name}_camera_rgb_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${pi/2} ${-pi/2} 0 " />
        <parent link="${name}_camera_rgb_optical_frame" />
        <child link="${name}_camera_rgb_frame" />
      </joint>      
    </xacro:unless>
    
    <xacro:if value="${has_depth}">
      <xacro:if value="${has_second_origin}">
        <!-- attach rgb to parent -->
        <joint name="${name}_camera_rgb_optical_joint" type="fixed">
          <xacro:insert_block name="second_origin"/>
          <parent link="${parent}"/>
          <child link="${name}_camera_rgb_optical_frame" />
        </joint>
      </xacro:if>
    </xacro:if>
    <xacro:unless value="${has_depth}">
      <!-- attach rgb to parent -->
      <joint name="${name}_camera_rgb_optical_joint" type="fixed">
        <xacro:insert_block name="origin"/>
        <parent link="${parent}"/>
        <child link="${name}_camera_rgb_optical_frame" />
      </joint>
    </xacro:unless>

    <!-- Gazebo camera sensor for simulation -->
    <!-- if second origin is given, then create separate sensors (one depth, one rgb) and not a kinect with embedded color/depth -->
    <xacro:if value="${has_depth and not has_second_origin}">
      <gazebo_camera linkref="${name}_camera_depth_frame" name="${name}" fps="${fps}" hfov="${hfov}" width="${width}" height="${height}" has_depth="1" has_color="1"/> 
    </xacro:if>
    <xacro:if value="${has_depth and has_second_origin}">
      <xacro:property name="second_hfov" value="${hfov if hfov2=='-' else hfov2}" />
      <xacro:property name="second_width" value="${width if width2=='-' else width2}" />
      <xacro:property name="second_height" value="${height if height2=='-' else height2}" />
      <gazebo_camera linkref="${name}_camera_depth_frame" name="${name}" fps="${fps}" hfov="${hfov}" width="${width}" height="${height}" has_depth="1" has_color="0"/> 
      <gazebo_camera linkref="${name}_camera_rgb_frame" name="${name}" fps="${fps}" hfov="${second_hfov}" width="${second_width}" height="${second_height}" has_depth="0" has_color="1"/> 
    </xacro:if>
    <xacro:if value="${not has_depth}">
      <gazebo_camera linkref="${name}_camera_rgb_frame" name="${name}" fps="${fps}" hfov="${hfov}" width="${width}" height="${height}" has_depth="0" has_color="1"/> 
    </xacro:if>
  </xacro:macro>

</robot>
